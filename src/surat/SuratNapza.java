/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package surat;
import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
/**
 *
 * @author root
 */
public class SuratNapza extends javax.swing.JDialog {

    private final DefaultTableModel tabMode;
    private Connection koneksi_john=koneksiDB.condb();
    private ResultSet rs_john;
    private Object WindowAmbilSampel;
    private validasi Valid=new validasi();
    private ResultSet rs;
    private sekuel Sequel=new sekuel();
    private int i=0, diagvalue=0, psivalue=0, pmlvalue=0;
    
    public SuratNapza(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
       // WindowAmbilSampel.setSize(530,80);
        tabMode=new DefaultTableModel(null,new Object[]{
            "No.Surat","Diagnostik", "Tgl Diagnostik", "jam", "Psikiatrik", "Tgl Psikiatrik", "jam",
            "Pemeriksaan Lain","Tgl Pem. Lain", "jam", "Gejala", "Keterangan"
            }){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
              Class[] types = new Class[] {
                java.lang.String.class,
                java.lang.Integer.class,java.lang.String.class,java.lang.String.class,
                java.lang.Integer.class,java.lang.String.class,java.lang.String.class,
                java.lang.Integer.class,java.lang.String.class,java.lang.String.class,
                java.lang.String.class,java.lang.String.class
             };
             @Override
             public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
             }
        };
        tbSuratNapza.setModel(tabMode);
        tbSuratNapza.setPreferredScrollableViewportSize(new Dimension(800,800));
        tbSuratNapza.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        int i;
        for (i = 0; i < 12; i++) {
            TableColumn column = tbSuratNapza.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(90);
            }else if(i==1){
                column.setPreferredWidth(90);
            }else if(i==2){
                column.setPreferredWidth(75);
            }else if(i==3){
                column.setPreferredWidth(70);
            }else if(i==4){
                column.setPreferredWidth(90);
            }else if(i==5){
                column.setPreferredWidth(75);
            }else if(i==6){
                column.setPreferredWidth(70);
            }else if(i==7){
                column.setPreferredWidth(90);
            }else if(i==8){
                column.setPreferredWidth(75);
            }else if(i==9){
                column.setPreferredWidth(70);
            }else if(i==10){
                column.setPreferredWidth(70);
            }else if(i==11){
                column.setPreferredWidth(140);
            } 
        }
        tbSuratNapza.setDefaultRenderer(Object.class, new WarnaTable());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        jPanel1 = new javax.swing.JPanel();
        FormInput = new widget.PanelBiasa();
        TglDiagnostik = new widget.Tanggal();
        jLabel6 = new widget.Label();
        jLabel9 = new widget.Label();
        scrollPane1 = new widget.ScrollPane();
        keterangan = new widget.TextArea();
        jLabel14 = new widget.Label();
        TNoSurat = new widget.TextBox();
        dJam = new widget.ComboBox();
        dMenit = new widget.ComboBox();
        dDetik = new widget.ComboBox();
        jLabel18 = new widget.Label();
        jLabel19 = new widget.Label();
        jLabel20 = new widget.Label();
        TglPsikiatrik = new widget.Tanggal();
        TglPemeriksaan = new widget.Tanggal();
        jLabel21 = new widget.Label();
        jLabel22 = new widget.Label();
        jLabel23 = new widget.Label();
        psiJam = new widget.ComboBox();
        psiMenit = new widget.ComboBox();
        psiDetik = new widget.ComboBox();
        plJam = new widget.ComboBox();
        plMenit = new widget.ComboBox();
        plDetik = new widget.ComboBox();
        chkDiag = new widget.CekBox();
        chkPsi = new widget.CekBox();
        chkPL = new widget.CekBox();
        gejala = new widget.ComboBox();
        jPanel2 = new javax.swing.JPanel();
        panelGlass6 = new widget.panelisi();
        BtnSimpan = new widget.Button();
        BtnBatal = new widget.Button();
        BtnEdit = new widget.Button();
        BtnHapus = new widget.Button();
        BtnPrint = new widget.Button();
        BtnAll = new widget.Button();
        jLabel12 = new widget.Label();
        LCount = new widget.Label();
        BtnKeluar = new widget.Button();
        panelGlass7 = new widget.panelisi();
        jLabel15 = new widget.Label();
        DTPCari1 = new widget.Tanggal();
        jLabel17 = new widget.Label();
        DTPCari2 = new widget.Tanggal();
        jLabel16 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();
        Scroll = new widget.ScrollPane();
        tbSuratNapza = new widget.Table();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Data Surat Napza ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(70, 70, 70))); // NOI18N
        internalFrame1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        internalFrame1.setName(""); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(500, 240));
        jPanel1.setLayout(new java.awt.BorderLayout());

        FormInput.setPreferredSize(new java.awt.Dimension(500, 240));
        FormInput.setLayout(null);

        TglDiagnostik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "21-07-2022" }));
        TglDiagnostik.setDisplayFormat("dd-MM-yyyy");
        TglDiagnostik.setOpaque(false);
        TglDiagnostik.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TglDiagnostikItemStateChanged(evt);
            }
        });
        TglDiagnostik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TglDiagnostikActionPerformed(evt);
            }
        });
        TglDiagnostik.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TglDiagnostikKeyPressed(evt);
            }
        });
        FormInput.add(TglDiagnostik);
        TglDiagnostik.setBounds(195, 40, 98, 23);

        jLabel6.setText("Keperluan :");
        FormInput.add(jLabel6);
        jLabel6.setBounds(530, 70, 60, 23);

        jLabel9.setText("Gejala :");
        FormInput.add(jLabel9);
        jLabel9.setBounds(530, 40, 60, 23);

        scrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        keterangan.setColumns(20);
        keterangan.setRows(5);
        keterangan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keteranganKeyPressed(evt);
            }
        });
        scrollPane1.setViewportView(keterangan);

        FormInput.add(scrollPane1);
        scrollPane1.setBounds(595, 70, 370, 55);

        jLabel14.setText("No. Surat :");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        FormInput.add(jLabel14);
        jLabel14.setBounds(25, 10, 90, 23);

        TNoSurat.setBackground(new java.awt.Color(245, 250, 240));
        TNoSurat.setHighlighter(null);
        TNoSurat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TNoSuratActionPerformed(evt);
            }
        });
        FormInput.add(TNoSurat);
        TNoSurat.setBounds(125, 10, 370, 23);

        dJam.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        dJam.setPreferredSize(new java.awt.Dimension(100, 23));
        dJam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dJamKeyPressed(evt);
            }
        });
        FormInput.add(dJam);
        dJam.setBounds(355, 40, 45, 23);

        dMenit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        dMenit.setPreferredSize(new java.awt.Dimension(100, 23));
        dMenit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dMenitKeyPressed(evt);
            }
        });
        FormInput.add(dMenit);
        dMenit.setBounds(405, 40, 45, 23);

        dDetik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        dDetik.setPreferredSize(new java.awt.Dimension(100, 23));
        dDetik.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dDetikKeyPressed(evt);
            }
        });
        FormInput.add(dDetik);
        dDetik.setBounds(450, 40, 45, 23);

        jLabel18.setText("Pada Tanggal");
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        FormInput.add(jLabel18);
        jLabel18.setBounds(125, 40, 65, 23);

        jLabel19.setText("Pada Tanggal");
        jLabel19.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        FormInput.add(jLabel19);
        jLabel19.setBounds(125, 70, 65, 23);

        jLabel20.setText("Pada Tanggal");
        jLabel20.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        FormInput.add(jLabel20);
        jLabel20.setBounds(125, 100, 65, 23);

        TglPsikiatrik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "21-07-2022" }));
        TglPsikiatrik.setDisplayFormat("dd-MM-yyyy");
        TglPsikiatrik.setOpaque(false);
        TglPsikiatrik.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TglPsikiatrikItemStateChanged(evt);
            }
        });
        TglPsikiatrik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TglPsikiatrikActionPerformed(evt);
            }
        });
        TglPsikiatrik.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TglPsikiatrikKeyPressed(evt);
            }
        });
        FormInput.add(TglPsikiatrik);
        TglPsikiatrik.setBounds(195, 70, 98, 23);

        TglPemeriksaan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "21-07-2022" }));
        TglPemeriksaan.setDisplayFormat("dd-MM-yyyy");
        TglPemeriksaan.setOpaque(false);
        TglPemeriksaan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TglPemeriksaanItemStateChanged(evt);
            }
        });
        TglPemeriksaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TglPemeriksaanActionPerformed(evt);
            }
        });
        TglPemeriksaan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TglPemeriksaanKeyPressed(evt);
            }
        });
        FormInput.add(TglPemeriksaan);
        TglPemeriksaan.setBounds(195, 100, 98, 23);

        jLabel21.setText("Jam");
        jLabel21.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        FormInput.add(jLabel21);
        jLabel21.setBounds(315, 40, 30, 23);

        jLabel22.setText("Jam");
        jLabel22.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        FormInput.add(jLabel22);
        jLabel22.setBounds(315, 70, 30, 23);

        jLabel23.setText("Jam");
        jLabel23.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        FormInput.add(jLabel23);
        jLabel23.setBounds(315, 100, 30, 23);

        psiJam.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        psiJam.setPreferredSize(new java.awt.Dimension(100, 23));
        psiJam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                psiJamKeyPressed(evt);
            }
        });
        FormInput.add(psiJam);
        psiJam.setBounds(355, 70, 45, 23);

        psiMenit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        psiMenit.setPreferredSize(new java.awt.Dimension(100, 23));
        psiMenit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                psiMenitKeyPressed(evt);
            }
        });
        FormInput.add(psiMenit);
        psiMenit.setBounds(405, 70, 45, 23);

        psiDetik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        psiDetik.setPreferredSize(new java.awt.Dimension(100, 23));
        psiDetik.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                psiDetikKeyPressed(evt);
            }
        });
        FormInput.add(psiDetik);
        psiDetik.setBounds(450, 70, 45, 23);

        plJam.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        plJam.setPreferredSize(new java.awt.Dimension(100, 23));
        plJam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                plJamKeyPressed(evt);
            }
        });
        FormInput.add(plJam);
        plJam.setBounds(355, 100, 45, 23);

        plMenit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        plMenit.setPreferredSize(new java.awt.Dimension(100, 23));
        plMenit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                plMenitKeyPressed(evt);
            }
        });
        FormInput.add(plMenit);
        plMenit.setBounds(405, 100, 45, 23);

        plDetik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        plDetik.setPreferredSize(new java.awt.Dimension(100, 23));
        plDetik.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                plDetikKeyPressed(evt);
            }
        });
        FormInput.add(plDetik);
        plDetik.setBounds(450, 100, 45, 23);

        chkDiag.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        chkDiag.setSelected(true);
        chkDiag.setText("   Fisik Diagnostik :");
        chkDiag.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chkDiag.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        chkDiag.setMaximumSize(new java.awt.Dimension(100, 16));
        chkDiag.setMinimumSize(new java.awt.Dimension(100, 16));
        chkDiag.setName(""); // NOI18N
        chkDiag.setPreferredSize(new java.awt.Dimension(100, 16));
        chkDiag.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDiagItemStateChanged(evt);
            }
        });
        chkDiag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDiagActionPerformed(evt);
            }
        });
        FormInput.add(chkDiag);
        chkDiag.setBounds(10, 40, 120, 23);

        chkPsi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        chkPsi.setSelected(true);
        chkPsi.setText("             Psikiatrik :");
        chkPsi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chkPsi.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        chkPsi.setMaximumSize(new java.awt.Dimension(100, 16));
        chkPsi.setMinimumSize(new java.awt.Dimension(100, 16));
        chkPsi.setName(""); // NOI18N
        chkPsi.setPreferredSize(new java.awt.Dimension(100, 16));
        chkPsi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkPsiItemStateChanged(evt);
            }
        });
        chkPsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPsiActionPerformed(evt);
            }
        });
        FormInput.add(chkPsi);
        chkPsi.setBounds(10, 70, 120, 23);
        chkPsi.getAccessibleContext().setAccessibleName("Psikiatrik :");

        chkPL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        chkPL.setSelected(true);
        chkPL.setText("Pemeriksaan Lain :");
        chkPL.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chkPL.setMaximumSize(new java.awt.Dimension(100, 16));
        chkPL.setMinimumSize(new java.awt.Dimension(100, 16));
        chkPL.setName(""); // NOI18N
        chkPL.setPreferredSize(new java.awt.Dimension(100, 16));
        chkPL.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkPLItemStateChanged(evt);
            }
        });
        chkPL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPLActionPerformed(evt);
            }
        });
        FormInput.add(chkPL);
        chkPL.setBounds(10, 100, 120, 23);

        gejala.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Ada", "Tidak Ada" }));
        gejala.setPreferredSize(new java.awt.Dimension(100, 23));
        gejala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gejalaActionPerformed(evt);
            }
        });
        gejala.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gejalaKeyPressed(evt);
            }
        });
        FormInput.add(gejala);
        gejala.setBounds(595, 40, 75, 23);

        jPanel1.add(FormInput, java.awt.BorderLayout.CENTER);

        internalFrame1.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        panelGlass6.setPreferredSize(new java.awt.Dimension(55, 55));
        panelGlass6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan.setMnemonic('S');
        BtnSimpan.setText("Simpan");
        BtnSimpan.setToolTipText("Alt+S");
        BtnSimpan.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });
        BtnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnSimpanKeyPressed(evt);
            }
        });
        panelGlass6.add(BtnSimpan);

        BtnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Cancel-2-16x16.png"))); // NOI18N
        BtnBatal.setMnemonic('B');
        BtnBatal.setText("Baru");
        BtnBatal.setToolTipText("Alt+B");
        BtnBatal.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBatalActionPerformed(evt);
            }
        });
        BtnBatal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnBatalKeyPressed(evt);
            }
        });
        panelGlass6.add(BtnBatal);

        BtnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/inventaris.png"))); // NOI18N
        BtnEdit.setMnemonic('G');
        BtnEdit.setText("Ganti");
        BtnEdit.setToolTipText("Alt+G");
        BtnEdit.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });
        BtnEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnEditKeyPressed(evt);
            }
        });
        panelGlass6.add(BtnEdit);

        BtnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/stop_f2.png"))); // NOI18N
        BtnHapus.setMnemonic('H');
        BtnHapus.setText("Hapus");
        BtnHapus.setToolTipText("Alt+H");
        BtnHapus.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHapusActionPerformed(evt);
            }
        });
        BtnHapus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnHapusKeyPressed(evt);
            }
        });
        panelGlass6.add(BtnHapus);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelGlass6.add(BtnPrint);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setText("Semua");
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelGlass6.add(BtnAll);

        jLabel12.setText("Record :");
        jLabel12.setPreferredSize(new java.awt.Dimension(70, 30));
        panelGlass6.add(jLabel12);

        LCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LCount.setText("0");
        LCount.setPreferredSize(new java.awt.Dimension(72, 30));
        panelGlass6.add(LCount);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass6.add(BtnKeluar);

        jPanel2.add(panelGlass6, java.awt.BorderLayout.PAGE_END);

        panelGlass7.setPreferredSize(new java.awt.Dimension(44, 44));
        panelGlass7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel15.setText("Periode :");
        jLabel15.setPreferredSize(new java.awt.Dimension(60, 23));
        panelGlass7.add(jLabel15);

        DTPCari1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "21-07-2022" }));
        DTPCari1.setDisplayFormat("dd-MM-yyyy");
        DTPCari1.setOpaque(false);
        DTPCari1.setPreferredSize(new java.awt.Dimension(133, 23));
        panelGlass7.add(DTPCari1);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("s.d");
        jLabel17.setPreferredSize(new java.awt.Dimension(24, 23));
        panelGlass7.add(jLabel17);

        DTPCari2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "21-07-2022" }));
        DTPCari2.setDisplayFormat("dd-MM-yyyy");
        DTPCari2.setOpaque(false);
        DTPCari2.setPreferredSize(new java.awt.Dimension(133, 23));
        panelGlass7.add(DTPCari2);

        jLabel16.setText("Key Word :");
        jLabel16.setPreferredSize(new java.awt.Dimension(158, 23));
        panelGlass7.add(jLabel16);

        TCari.setPreferredSize(new java.awt.Dimension(300, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelGlass7.add(TCari);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('7');
        BtnCari.setToolTipText("Alt+7");
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelGlass7.add(BtnCari);

        jPanel2.add(panelGlass7, java.awt.BorderLayout.CENTER);

        internalFrame1.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        Scroll.setOpaque(true);
        Scroll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ScrollMouseClicked(evt);
            }
        });

        tbSuratNapza.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbSuratNapza.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSuratNapzaMouseClicked(evt);
            }
        });
        tbSuratNapza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbSuratNapzaKeyPressed(evt);
            }
        });
        Scroll.setViewportView(tbSuratNapza);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        if(TNoSurat.getText().trim().equals("")){
            Valid.textKosong(TNoSurat,"no surat");
        }else if(keterangan.getText().trim().equals("")){
            Valid.textKosong(keterangan, "keperluan");
        }else{
            chkForm();
            if(Sequel.menyimpantf("surat_napza","'"+TNoSurat.getText()+"','"+
                            diagvalue+"','"+
                            Valid.SetTgl(TglDiagnostik.getSelectedItem()+"")+"','"+ 
                            dJam.getSelectedItem()+":"+dMenit.getSelectedItem()+":"+dDetik.getSelectedItem()+"','"+
                            psivalue+"','"+
                            Valid.SetTgl(TglPsikiatrik.getSelectedItem()+"")+"','"+ 
                            psiJam.getSelectedItem()+":"+psiMenit.getSelectedItem()+":"+psiDetik.getSelectedItem()+"','"+
                            pmlvalue+"','"+
                            Valid.SetTgl(TglPemeriksaan.getSelectedItem()+"")+"','"+ 
                            plJam.getSelectedItem()+":"+plMenit.getSelectedItem()+":"+plDetik.getSelectedItem()+"','"+
                            gejala.getSelectedItem()+"','"+
                            keterangan.getText()+"'","No. Surat")==true){
                tampil();
                emptTeks();
            }else{
                TNoSurat.requestFocus();
            }            
        }
    }//GEN-LAST:event_BtnSimpanActionPerformed

    private void BtnSimpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnSimpanKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnSimpanActionPerformed(null);
        }else{
            Valid.pindah(evt,TNoSurat,BtnBatal);
        }
    }//GEN-LAST:event_BtnSimpanKeyPressed

    private void BtnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBatalActionPerformed
        emptTeks();
        autoNomor();
        BtnSimpan.setEnabled(true);
        BtnEdit.setEnabled(false);
        BtnHapus.setEnabled(false);
        BtnPrint.setEnabled(false);
    }//GEN-LAST:event_BtnBatalActionPerformed

    private void BtnBatalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnBatalKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            emptTeks();
        }else{
            Valid.pindah(evt, BtnSimpan, BtnHapus);
        }
    }//GEN-LAST:event_BtnBatalKeyPressed

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        if(TNoSurat.getText().trim().equals("")){
            Valid.textKosong(TNoSurat,"no surat");
        }else if(keterangan.getText().trim().equals("")){
            Valid.textKosong(keterangan, "keperluan");
        }else{
            chkForm();
            Valid.editTable(tabMode,"surat_napza","no_surat",TNoSurat,
                    "diagnostik='"+diagvalue+
                    "',tgl_diagnostik='"+Valid.SetTgl(TglDiagnostik.getSelectedItem()+"")+
                    "',jam_diag='"+dJam.getSelectedItem()+":"+dMenit.getSelectedItem()+":"+dDetik.getSelectedItem()+
                    "',psikiatrik='"+psivalue+
                    "',tgl_psikiatrik='"+Valid.SetTgl(TglPsikiatrik.getSelectedItem()+"")+
                    "',jam_psi='"+psiJam.getSelectedItem()+":"+psiMenit.getSelectedItem()+":"+psiDetik.getSelectedItem()+
                    "',pmrks_lain='"+pmlvalue+
                    "',tgl_pemeriksaan='"+Valid.SetTgl(TglPemeriksaan.getSelectedItem()+"")+
                    "',jam_pem='"+plJam.getSelectedItem()+":"+plMenit.getSelectedItem()+":"+plDetik.getSelectedItem()+
                    "',gejala='"+gejala.getSelectedItem().toString()+
                    "',keterangan='"+keterangan.getText()+"'");
            if(tabMode.getRowCount()!=0){tampil();}
            emptTeks();
        }
    }//GEN-LAST:event_BtnEditActionPerformed

    private void BtnEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnEditKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnEditActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnHapus, BtnKeluar);
        }
    }//GEN-LAST:event_BtnEditKeyPressed

    private void BtnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHapusActionPerformed
        if(TNoSurat.getText().trim().equals("")){
            Valid.textKosong(TNoSurat,"no surat");
        }else{
            Sequel.meghapus("surat_napza","no_surat",tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),0).toString());  
            tampil();
            emptTeks();
        }
    }//GEN-LAST:event_BtnHapusActionPerformed

    private void BtnHapusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnHapusKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnHapusActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnBatal, BtnEdit);
        }
    }//GEN-LAST:event_BtnHapusKeyPressed

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        
    }//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
       
    }//GEN-LAST:event_BtnPrintKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
       
    }//GEN-LAST:event_BtnAllKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        
    }//GEN-LAST:event_BtnKeluarKeyPressed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        
    }//GEN-LAST:event_TCariKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
     tampil();
    }//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
     
    }//GEN-LAST:event_BtnCariKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        tampil();
        autoNomor();
        BtnEdit.setEnabled(false);
        BtnHapus.setEnabled(false);
        BtnSimpan.setEnabled(true);
        BtnPrint.setEnabled(false);
    }//GEN-LAST:event_formWindowActivated

    private void tbSuratNapzaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbSuratNapzaKeyPressed
        /* if(tabMode.getRowCount()!=0){
            if(evt.getKeyCode()==KeyEvent.VK_SPACE){
                if((kolom==1)||(kolom==2)||(kolom==0)){
                    catatan.setNoRm(tbBangsal.getValueAt(tbBangsal.getSelectedRow(),0).toString());
                    catatan.setSize(720,330);
                    catatan.setLocationRelativeTo(internalFrame1);
                    catatan.setVisible(true);
                }
            }
        } */
        
        
    }//GEN-LAST:event_tbSuratNapzaKeyPressed

    private void tbSuratNapzaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSuratNapzaMouseClicked
        ambil_data();
        BtnEdit.setEnabled(true);
        BtnHapus.setEnabled(true);
        BtnSimpan.setEnabled(false);
        BtnPrint.setEnabled(true);
    }//GEN-LAST:event_tbSuratNapzaMouseClicked

    private void ScrollMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ScrollMouseClicked
        //TNoRawat.setText(tbDataSuratSehat.getSelectedRow(),1);
        //TNoRawat.setText(tbDataSuratSehat.getValueAt(tbDataSuratSehat.getSelectedRow(),1).toString());
        //TNoRM.setText(tbDataSuratSehat.getValueAt(tbDataSuratSehat.getSelectedRow(),2).toString());
        //TNamaPasien1.setText(tbDataSuratSehat.getValueAt(tbDataSuratSehat.getSelectedRow(),3).toString());
    }//GEN-LAST:event_ScrollMouseClicked

    private void TNoSuratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TNoSuratActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNoSuratActionPerformed

    private void TglDiagnostikKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TglDiagnostikKeyPressed

    }//GEN-LAST:event_TglDiagnostikKeyPressed

    private void TglDiagnostikItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TglDiagnostikItemStateChanged

    }//GEN-LAST:event_TglDiagnostikItemStateChanged

    private void TglDiagnostikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TglDiagnostikActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TglDiagnostikActionPerformed

    private void dJamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dJamKeyPressed
//        Valid.pindah(evt,Lahir, Dmenit);
    }//GEN-LAST:event_dJamKeyPressed

    private void dMenitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dMenitKeyPressed
        Valid.pindah(evt,dJam,dDetik);
    }//GEN-LAST:event_dMenitKeyPressed

    private void dDetikKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dDetikKeyPressed
//        Valid.pindah(evt,Dmenit,KdPenolong);
    }//GEN-LAST:event_dDetikKeyPressed

    private void TglPsikiatrikItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TglPsikiatrikItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_TglPsikiatrikItemStateChanged

    private void TglPsikiatrikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TglPsikiatrikActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TglPsikiatrikActionPerformed

    private void TglPsikiatrikKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TglPsikiatrikKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TglPsikiatrikKeyPressed

    private void TglPemeriksaanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TglPemeriksaanItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_TglPemeriksaanItemStateChanged

    private void TglPemeriksaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TglPemeriksaanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TglPemeriksaanActionPerformed

    private void TglPemeriksaanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TglPemeriksaanKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TglPemeriksaanKeyPressed

    private void psiJamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_psiJamKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_psiJamKeyPressed

    private void psiMenitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_psiMenitKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_psiMenitKeyPressed

    private void psiDetikKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_psiDetikKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_psiDetikKeyPressed

    private void plJamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_plJamKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_plJamKeyPressed

    private void plMenitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_plMenitKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_plMenitKeyPressed

    private void plDetikKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_plDetikKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_plDetikKeyPressed

    private void keteranganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keteranganKeyPressed
//        Valid.pindah(evt,Anakke,Diagnosa);
    }//GEN-LAST:event_keteranganKeyPressed

    private void chkDiagItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDiagItemStateChanged
        // TODO add your handling code here:
  
    }//GEN-LAST:event_chkDiagItemStateChanged

    private void gejalaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gejalaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_gejalaKeyPressed

    private void chkDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDiagActionPerformed
//        if(chkDiag.isSelected()==true){
//            TglDiagnostik.setEditable(false);
//            Djam.setEditable(false);
//            Dmenit.setEditable(false);
//            Ddetik.setEditable(false);
//        }else if(chkDiag.isSelected()==false){
//            TglDiagnostik.setEditable(true);
//            Djam.setEditable(true);
//            Dmenit.setEditable(true);
//            Ddetik.setEditable(true);
//        }
    }//GEN-LAST:event_chkDiagActionPerformed

    private void chkPsiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkPsiItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPsiItemStateChanged

    private void chkPsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPsiActionPerformed
//        if(chkPsi.isSelected()==true){
//            TglPsikiatrik.setEditable(false);
//            Pjam.setEditable(false);
//            Pmenit.setEditable(false);
//            Pdetik.setEditable(false);
//        }else if(chkPsi.isSelected()==false){
//            TglDiagnostik.setEditable(true);
//            Pjam.setEditable(true);
//            Pmenit.setEditable(true);
//            Pdetik.setEditable(true);
//        }
    }//GEN-LAST:event_chkPsiActionPerformed

    private void chkPLItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkPLItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPLItemStateChanged

    private void chkPLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPLActionPerformed
//        if(chkPL.isSelected()==true){
//            TglPemeriksaan.setEditable(false);
//            PLjam.setEditable(false);
//            PLmenit.setEditable(false);
//            PLdetik.setEditable(false);
//        }else if(chkPL.isSelected()==false){
//            TglPemeriksaan.setEditable(true);
//            PLjam.setEditable(true);
//            PLmenit.setEditable(true);
//            PLdetik.setEditable(true);
//        }
    }//GEN-LAST:event_chkPLActionPerformed

    private void gejalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gejalaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gejalaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuratNapza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuratNapza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuratNapza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuratNapza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SuratNapza dialog = new SuratNapza(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnBatal;
    public widget.Button BtnCari;
    private widget.Button BtnEdit;
    private widget.Button BtnHapus;
    private widget.Button BtnKeluar;
    private widget.Button BtnPrint;
    private widget.Button BtnSimpan;
    private widget.Tanggal DTPCari1;
    private widget.Tanggal DTPCari2;
    private widget.PanelBiasa FormInput;
    private widget.Label LCount;
    private widget.ScrollPane Scroll;
    private widget.TextBox TCari;
    private widget.TextBox TNoSurat;
    private widget.Tanggal TglDiagnostik;
    private widget.Tanggal TglPemeriksaan;
    private widget.Tanggal TglPsikiatrik;
    private widget.CekBox chkDiag;
    private widget.CekBox chkPL;
    private widget.CekBox chkPsi;
    private widget.ComboBox dDetik;
    private widget.ComboBox dJam;
    private widget.ComboBox dMenit;
    private widget.ComboBox gejala;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel12;
    private widget.Label jLabel14;
    private widget.Label jLabel15;
    private widget.Label jLabel16;
    private widget.Label jLabel17;
    private widget.Label jLabel18;
    private widget.Label jLabel19;
    private widget.Label jLabel20;
    private widget.Label jLabel21;
    private widget.Label jLabel22;
    private widget.Label jLabel23;
    private widget.Label jLabel6;
    private widget.Label jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private widget.TextArea keterangan;
    private widget.panelisi panelGlass6;
    private widget.panelisi panelGlass7;
    private widget.ComboBox plDetik;
    private widget.ComboBox plJam;
    private widget.ComboBox plMenit;
    private widget.ComboBox psiDetik;
    private widget.ComboBox psiJam;
    private widget.ComboBox psiMenit;
    private widget.ScrollPane scrollPane1;
    private widget.Table tbSuratNapza;
    // End of variables declaration//GEN-END:variables

private void tampil() {
        Valid.tabelKosong(tabMode);
        try {
            PreparedStatement ps = koneksi_john.prepareStatement(
            "SELECT * FROM surat_napza where tgl_diagnostik AND tgl_psikiatrik AND tgl_pemeriksaan "
                    + "between ? AND ? order by no_surat DESC" );
            try {
                ps.setString(1,Valid.SetTgl(DTPCari1.getSelectedItem()+""));
                ps.setString(2,Valid.SetTgl(DTPCari2.getSelectedItem()+""));
              //  ps.setString(3,Valid.SetTgl(DTPCari1.getSelectedItem()+""));
              //  ps.setString(4,Valid.SetTgl(DTPCari2.getSelectedItem()+""));
              //  ps.setString(5,"%"+TCari.getText()+"%");
              //  ps.setString(6,Valid.SetTgl(DTPCari1.getSelectedItem()+""));
              //  ps.setString(7,Valid.SetTgl(DTPCari2.getSelectedItem()+""));
              //  ps.setString(8,"%"+TCari.getText()+"%");
                rs = ps.executeQuery();
                while(rs.next()){
                    tabMode.addRow(new Object[]{
                        rs.getString("no_surat"), rs.getInt("diagnostik"), rs.getString("tgl_diagnostik"), rs.getString("jam_diag"),
                        rs.getInt("psikiatrik"), rs.getString("tgl_psikiatrik"), rs.getString("jam_psi"),
                        rs.getInt("pmrks_lain"), rs.getString("tgl_pemeriksaan"), rs.getString("jam_pem"),
                        rs.getString("gejala"),rs.getString("keterangan")
                    });
                }
                rs.last();
                LCount.setText(""+rs.getRow());
            } catch (Exception e) {
                System.out.println("Notif : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps!=null){
                    ps.close();
                }
            }
        } catch (Exception e) {
            System.out.println("Notif : "+e);
        }        
    }
    
    public void setPasien(String norm, String norawat, String nama, String nama_dokter, String kd_dokter) {
//        String norawat = null;
//        TNoRawat.setText(norawat);
//        TNoRM1.setText(norm);
//        TNamaPasien1.setText(nama);
//        TKdDokter.setText(kd_dokter);
//        TNamaDokter.setText(nama_dokter);     
    }
    private void ambil_data(){
        TNoSurat.setText((tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(), 0).toString()));
        diagvalue = (Integer)tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(), 1);
        if(diagvalue == 0){
            chkDiag.setSelected(false);
        }else if(diagvalue==1){
            chkDiag.setSelected(true);
        }
        Valid.SetTgl(TglDiagnostik,tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),2).toString());
        dJam.setSelectedItem(tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),3).toString().substring(0,2));
        dMenit.setSelectedItem(tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),3).toString().substring(3,5));
        dDetik.setSelectedItem(tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),3).toString().substring(6,8));
        psivalue = (Integer)tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(), 4);
        if(psivalue == 0){
            chkPsi.setSelected(false);
        }else if(psivalue==1){
            chkPsi.setSelected(true);
        }
        Valid.SetTgl(TglPsikiatrik,tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),5).toString());
        psiJam.setSelectedItem(tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),6).toString().substring(0,2));
        psiMenit.setSelectedItem(tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),6).toString().substring(3,5));
        psiDetik.setSelectedItem(tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),6).toString().substring(6,8));
        pmlvalue = (Integer)tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(), 7);
        if(pmlvalue == 0){
            chkPL.setSelected(false);
        }else if(pmlvalue==1){
            chkPL.setSelected(true);
        }
        Valid.SetTgl(TglPemeriksaan,tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),8).toString());
        plJam.setSelectedItem(tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),9).toString().substring(0,2));
        plMenit.setSelectedItem(tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),9).toString().substring(3,5));
        plDetik.setSelectedItem(tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),9).toString().substring(6,8));
        gejala.setSelectedItem((tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(), 10).toString()));
        keterangan.setText(tbSuratNapza.getValueAt(tbSuratNapza.getSelectedRow(),11).toString());
    }

public  void emptTeks(){
        TNoSurat.setText("");
        chkDiag.setSelected(false);
        TglDiagnostik.setDate(new Date());
        dJam.setSelectedIndex(0);
        dMenit.setSelectedIndex(0);
        dDetik.setSelectedIndex(0);
        chkPsi.setSelected(false);
        TglPsikiatrik.setDate(new Date());
        psiJam.setSelectedIndex(0);
        psiMenit.setSelectedIndex(0);
        psiDetik.setSelectedIndex(0);
        chkPL.setSelected(false);
        TglPemeriksaan.setDate(new Date());
        plJam.setSelectedIndex(0);
        plMenit.setSelectedIndex(0);
        plDetik.setSelectedIndex(0);
        gejala.setSelectedIndex(0);
        keterangan.setText("");
        TNoSurat.requestFocus();
//        autoNomor();
//        Valid.autoNomer(" surat_napza ","SN",3,TNoSurat);
}

    private void autoNomor() {
        Valid.autoNomer3("select ifnull(MAX(CONVERT(RIGHT(no_surat,3),signed)),0) from surat_napza where tgl_diagnostik='"+
                Valid.SetTgl(TglDiagnostik.getSelectedItem()+"")+"' ","",3,TNoSurat);           
    }
    
    private void isForm(){
        FormInput.setPreferredSize(new Dimension(WIDTH,240));
        FormInput.setVisible(true);      
    }
    
    private void chkForm(){
        if (chkDiag.isSelected() == true) {
            diagvalue = 1;
        } else {
            diagvalue = 0;
        }
        if (chkPsi.isSelected() == true) {
            psivalue = 1;
        } else {
            psivalue = 0;
        }
        if (chkPL.isSelected() == true) {
            pmlvalue = 1;
        } else {
            pmlvalue = 0;
        }
    }
    
}


