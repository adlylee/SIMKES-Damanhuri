/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DlgLhtBiaya.java
 *
 * Created on 12 Jul 10, 16:21:34
 */

package laporan;

import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.var;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author perpustakaan
 */
public final class DlgRl31 extends javax.swing.JDialog {
    private final DefaultTableModel tabMode;
    private Connection koneksi=koneksiDB.condb();
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private PreparedStatement ps;
    private ResultSet rs;
    private int i=0,ttl=0;   
    /** Creates new form DlgLhtBiaya
     * @param parent
     * @param modal */
    public DlgRl31(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocation(8,1);
        setSize(885,674);

        Object[] rowRwJlDr={"No.","Jenis Pelayanan","Pasien Awal Tahun","Pasien Masuk","Pasien Keluar Hidup"
                ,"< 48 Jam","> 48 Jam","Jumlah Lama Dirawat","Pasien Akhir Tahun","Jumlah Hari Perawatan"
                ,"VVIP","VIP","I","II","III","Kelas Khusus"};
        tabMode=new DefaultTableModel(null,rowRwJlDr){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };
        tbBangsal.setModel(tabMode);
        //tbBangsal.setDefaultRenderer(Object.class, new WarnaTable(jPanel2.getBackground(),tbBangsal.getBackground()));
        tbBangsal.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbBangsal.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (i = 0; i < 16; i++) {
            TableColumn column = tbBangsal.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(25);
            }else if(i==1){
                column.setPreferredWidth(100);
            }else if(i==10 && i==11 && i==12 && i==13 && i==14){
                column.setPreferredWidth(60);
            }else{
                column.setPreferredWidth(100);
            }
        }
        tbBangsal.setDefaultRenderer(Object.class, new WarnaTable());

        TCari.setDocument(new batasInput((byte)100).getKata(TCari));
        
    }    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbBangsal = new widget.Table();
        panelGlass5 = new widget.panelisi();
        label11 = new widget.Label();
        Tgl1 = new javax.swing.JComboBox<>();
        jLabel6 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();
        BtnAll = new widget.Button();
        jLabel7 = new widget.Label();
        BtnPrint = new widget.Button();
        BtnKeluar = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ RL 3.1 Kegiatan Pelayanan Rawat Inap ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(70, 70, 70))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tbBangsal.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbBangsal.setName("tbBangsal"); // NOI18N
        Scroll.setViewportView(tbBangsal);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        panelGlass5.setName("panelGlass5"); // NOI18N
        panelGlass5.setPreferredSize(new java.awt.Dimension(55, 55));
        panelGlass5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        label11.setText("Tahun :");
        label11.setName("label11"); // NOI18N
        label11.setPreferredSize(new java.awt.Dimension(50, 23));
        panelGlass5.add(label11);

        Tgl1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2018", "2019", "2020", "2021", "2022" }));
        Tgl1.setName("Tgl1"); // NOI18N
        Tgl1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tgl1ActionPerformed(evt);
            }
        });
        panelGlass5.add(Tgl1);

        jLabel6.setText("Key Word :");
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(60, 23));
        panelGlass5.add(jLabel6);

        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(155, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelGlass5.add(TCari);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('2');
        BtnCari.setToolTipText("Alt+2");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnCari);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnAll);

        jLabel7.setName("jLabel7"); // NOI18N
        jLabel7.setPreferredSize(new java.awt.Dimension(30, 23));
        panelGlass5.add(jLabel7);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setName("BtnPrint"); // NOI18N
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnPrint);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnKeluar);

        internalFrame1.add(panelGlass5, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, data sudah habis. Tidak ada data yang bisa anda print...!!!!");
            //TCari.requestFocus();
        }else if(tabMode.getRowCount()!=0){
            
            Map<String, Object> param = new HashMap<>();         
            param.put("namars",var.getnamars());
            param.put("alamatrs",var.getalamatrs());
            param.put("kotars",var.getkabupatenrs());
            param.put("propinsirs",var.getpropinsirs());
            param.put("kontakrs",var.getkontakrs());
            param.put("emailrs",var.getemailrs());   
            param.put("periode",Tgl1.getSelectedItem());   
            param.put("logo",Sequel.cariGambar("select logo from setting"));  
            Sequel.queryu("delete from temporary");
            for(int r=0;r<tabMode.getRowCount();r++){ 
                if(!tbBangsal.getValueAt(r,0).toString().contains(">>")){
                    Sequel.menyimpan("temporary","'0','"+
                                    tabMode.getValueAt(r,0).toString()+"','"+
                                    tabMode.getValueAt(r,1).toString()+"','"+
                                    tabMode.getValueAt(r,2).toString()+"','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''","Rekap Nota Pembayaran");
                }                    
            }
               
            Valid.MyReport("rptRl33.jrxml","report","::[ Formulir RL 3.3 ]::",
                "select * from temporary order by no asc",param);
        }
        this.setCursor(Cursor.getDefaultCursor());
}//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnPrintActionPerformed(null);
        }else{
            //Valid.pindah(evt, BtnHapus, BtnAll);
        }
}//GEN-LAST:event_BtnPrintKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
}//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }else{Valid.pindah(evt,BtnKeluar,TCari);}
}//GEN-LAST:event_BtnKeluarKeyPressed

private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
       tampil();
}//GEN-LAST:event_BtnCariActionPerformed

private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); 
            tampil();
            this.setCursor(Cursor.getDefaultCursor());
        }else{
            Valid.pindah(evt, TCari, BtnPrint);
        }
}//GEN-LAST:event_BtnCariKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tampil();
    }//GEN-LAST:event_formWindowOpened

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
           TCari.setText("");
           tampil();
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnAllActionPerformed(null);
        }else{
            
        }
    }//GEN-LAST:event_BtnAllKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        tampil();

    }//GEN-LAST:event_formWindowActivated

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            BtnCariActionPerformed(null);
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            BtnCari.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            BtnKeluar.requestFocus();
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void Tgl1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tgl1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Tgl1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgRl33 dialog = new DlgRl33(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnCari;
    private widget.Button BtnKeluar;
    private widget.Button BtnPrint;
    private widget.ScrollPane Scroll;
    private widget.TextBox TCari;
    private javax.swing.JComboBox<String> Tgl1;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel6;
    private widget.Label jLabel7;
    private widget.Label label11;
    private widget.panelisi panelGlass5;
    private widget.Table tbBangsal;
    // End of variables declaration//GEN-END:variables

    public void tampil(){        
        try{   
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); 
            Valid.tabelKosong(tabMode);
            String awal_thn = "SELECT COUNT(kamar_inap.no_rawat) FROM `kamar_inap` JOIN dpjp_ranap ON kamar_inap.no_rawat = dpjp_ranap.no_rawat WHERE tgl_masuk BETWEEN ?'-01-01' AND ?'-12-31' AND tgl_keluar > ?'-01-01' AND dpjp_ranap.kd_dokter IN (?,?,?) ";
            String masuk = "SELECT COUNT(kamar_inap.no_rawat) FROM `kamar_inap` JOIN dpjp_ranap ON kamar_inap.no_rawat = dpjp_ranap.no_rawat  WHERE tgl_masuk BETWEEN '2019-01-01' AND '2019-12-31' AND dpjp_ranap.kd_dokter IN (?,?,?) ";
            String keluar = "SELECT COUNT(kamar_inap.no_rawat) FROM `kamar_inap` JOIN dpjp_ranap ON kamar_inap.no_rawat = dpjp_ranap.no_rawat  WHERE tgl_keluar BETWEEN '2019-01-01' AND '2019-12-31' AND stts_pulang NOT IN ('Meninggal','-','+','Pindah Kamar') AND dpjp_ranap.kd_dokter IN (?,?,?)  ";
            String kurang_dua_hari = "SELECT COUNT(kamar_inap.no_rawat) FROM `kamar_inap` JOIN dpjp_ranap ON kamar_inap.no_rawat = dpjp_ranap.no_rawat  WHERE tgl_keluar BETWEEN '2019-01-01' AND '2019-12-31' AND stts_pulang = 'Meninggal' AND lama < 2 AND dpjp_ranap.kd_dokter IN (?,?,?)  ";
            String lebih_dua_hari = "SELECT COUNT(kamar_inap.no_rawat) FROM `kamar_inap` JOIN dpjp_ranap ON kamar_inap.no_rawat = dpjp_ranap.no_rawat WHERE tgl_keluar BETWEEN '2019-01-01' AND '2019-12-31' AND stts_pulang = 'Meninggal' AND lama >= 2 AND dpjp_ranap.kd_dokter IN (?,?,?)  ";
            String total_lama = "SELECT SUM(kamar_inap.lama) FROM `kamar_inap` JOIN dpjp_ranap ON kamar_inap.no_rawat = dpjp_ranap.no_rawat WHERE tgl_keluar BETWEEN '2019-01-01' AND '2019-12-31' AND stts_pulang NOT IN ('-','+','Pindah Kamar') AND dpjp_ranap.kd_dokter IN (?,?,?) ";
            String akhir_tahun = "SELECT COUNT(kamar_inap.no_rawat) FROM `kamar_inap` JOIN dpjp_ranap ON kamar_inap.no_rawat = dpjp_ranap.no_rawat WHERE tgl_masuk BETWEEN '2020-01-01' AND '2020-12-31' AND tgl_keluar > '2021-01-01' AND dpjp_ranap.kd_dokter IN (?,?,?) ";
            String query = "SELECT ("+awal_thn+") as awal_tahun , ("+masuk+") as masuk , ("+keluar+") as keluar , ("+kurang_dua_hari+") as kdh , ("+lebih_dua_hari+") as ldh , ("+total_lama+") as ttl_lama , ("+akhir_tahun+") as akhir_tahun";
            List<String> pd = Arrays.asList("DR00025","DR00018","D0000071");
//            String pd = "D0000073,D0000071";
//            String sql_in = pd.stream().map(String::valueOf).collect(Collectors.joining(", ", "(", ")"));
//            query = query.replace("(?,?,?)", sql_in);
            int par_size = 4;
            int thn_b = Integer.parseInt((String)Tgl1.getSelectedItem()) - 1;
            String thn = String.valueOf(thn_b);
//            String[] pd = {"'D0000073'","'D0000071'","''"};
//            int par_size = 21;
//            String[] pd = {"D0000073","D0000071",""};
            ps=koneksi.prepareStatement(query);
            try{
            ps.setString(1,thn);
            ps.setString(2,thn);
            ps.setString(3,Tgl1.getSelectedItem().toString());
            do {            
//                    int j = 1;
                    for(String pdo : pd){
                        if(pdo != ""){
                        ps.setString(par_size, pdo);
                        }else{
                        ps.setString(par_size, "");
                        }
                    }
//                        System.out.println(j);
//                        j++;
                    par_size++;
            } while (par_size < 26);
//                int j = 1;
//                for(; j <=par_size; j++){
//                        ps.setString(j, pd[j-1]);
//                }
//
//                //set null for remaining ones
//                for(; j<=par_size;j++){
//                        ps.setNull(j, java.sql.Types.VARCHAR);
//                }
//                
//                ps.setString(1, query.replace("(?,?,?)", sql_in));
//                ps.setString(2, "D0000071");
//                ps.setString(3, "D0000073");
//                ps.setString(4, "D0000071");
//                ps.setString(5, "D0000073");
//                ps.setString(6, "D0000071");
//                ps.setString(7, "D0000073");
//                ps.setString(8, "D0000071");
//                ps.setString(9, "D0000073");
//                ps.setString(10, "D0000071");
//                ps.setString(11, "D0000073");
//                ps.setString(12, "D0000071");
//                ps.setString(13, "D0000073");
//                ps.setString(14, "D0000071");
            rs=ps.executeQuery();
            i=1;
            if(rs.next()){
            tabMode.addRow(new Object[]{
                    i=1,"Penyakit Dalam",rs.getInt("awal_tahun"),rs.getInt("masuk"),rs.getInt("keluar"),rs.getInt("kdh"),rs.getInt("ldh"),rs.getInt("ttl_lama"),rs.getInt("akhir_tahun")
                });
            }
            }catch(Exception e){
                System.out.println("Notifikasi : "+e);
            }
            rs.close();
            
//            tabMode.addRow(new Object[]{
//                    i=2,"Kesehatan Anak",0
//                });
//            
//            ps=koneksi.prepareStatement(query);
//            try{
//            
//            rs=ps.executeQuery();
//            while(rs.next()){
//            tabMode.addRow(new Object[]{
//                    i=3,"Obstetri",rs.getInt("awal_tahun"),rs.getInt("masuk"),rs.getInt("keluar"),rs.getInt("kdh"),rs.getInt("ldh"),rs.getInt("ttl_lama"),rs.getInt("akhir_tahun")
//                });
//            }
//            }catch(Exception e){
//                System.out.println("Notifikasi : "+e);
//            }
//            
//            ps=koneksi.prepareStatement(query);
//            try{
//            
//            rs=ps.executeQuery();
//            while(rs.next()){
//            tabMode.addRow(new Object[]{
//                    i=4,"Ginekologi"
//                });
//            }
//            }catch(Exception e){
//                System.out.println("Notifikasi : "+e);
//            }
//            
//            ps=koneksi.prepareStatement(query);
//            try{
//            
//            rs=ps.executeQuery();
//            while(rs.next()){
//            tabMode.addRow(new Object[]{
//                    i=5,"Bedah"
//                });
//            }
//            }catch(Exception e){
//                System.out.println("Notifikasi : "+e);
//            }
//            
//            ps=koneksi.prepareStatement(query);
//            try{
//            
//            rs=ps.executeQuery();
//            while(rs.next()){
//            tabMode.addRow(new Object[]{
//                    i=6,"Bedah Orthopedi"
//                });
//            }
//            }catch(Exception e){
//                System.out.println("Notifikasi : "+e);
//            }
//            
//            tabMode.addRow(new Object[]{
//                    i=7,"Bedah Syaraf",0
//                });
//            
//            ps=koneksi.prepareStatement(query);
//            try{
//            
//            rs=ps.executeQuery();
//            while(rs.next()){
//            tabMode.addRow(new Object[]{
//                    i=8,"Luka Bakar"
//                });
//            }
//            }catch(Exception e){
//                System.out.println("Notifikasi : "+e);
//            }
//            
//            tabMode.addRow(new Object[]{
//                    i=9,"Syaraf",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=10,"Jiwa",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=11,"Psikologi",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=12,"Napza",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=13,"THT",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=14,"Mata",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=15,"Kulit dan Kelamin",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=16,"Kardiologi",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=17,"Paru - Paru",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=18,"Geriatri",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=19,"Radioterapi",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=20,"Kedokteran Nuklir",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=21,"Kusta",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=22,"Rehabilitasi Medik",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=23,"Isolasi",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=24,"ICU",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=25,"ICCU",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=26,"NICU / PICU",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=27,"Umum",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=28,"Gigi dan Mulut",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=29,"Pelayanan Rawat Darurat",0
//                });
//            tabMode.addRow(new Object[]{
//                    i=88,"Perinatologi",0
//                });
            this.setCursor(Cursor.getDefaultCursor());
        }catch(Exception e){
            System.out.println("Notifikasi : "+e);
        }
    }

}
